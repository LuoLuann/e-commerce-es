version: '2.1'

services:

  postgres-db:
    image: postgres:16.0
    restart: always
    environment:
      POSTGRES_DB: eCommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "password"
      TZ: America/Sao_Paulo
    ports:
      - "5433:5432"
    networks:
      - ecommerce-networks
    volumes:
      - pg-data:/var/lib/postgresql/data
    user: "postgres"
    command: >
      bash -c "
        postgres -c 'shared_buffers=256MB' &
        sleep 5 &&
        psql -U postgres -d eCommerce -c 'CREATE SCHEMA IF NOT EXISTS catalog_schema;' &&
        psql -U postgres -d eCommerce -c 'CREATE SCHEMA IF NOT EXISTS price_schema;' &&
        psql -U postgres -d eCommerce -c 'CREATE SCHEMA IF NOT EXISTS inventory_schema;' &&
        wait
      "
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 10  # Aumentado para garantir que o PostgreSQL esteja pronto

  catalog:
    build: ./catalog
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/eCommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - ecommerce-networks
    depends_on:
   
      - postgres-db

  price:
    build: price
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/eCommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA=price_schema
    depends_on:
 
      - postgres-db
    networks:
      - ecommerce-networks

  inventory:
    build: inventory
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/eCommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA=inventory_schema
    depends_on:

      - postgres-db
    networks:
      - ecommerce-networks

  message:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ecommerce-networks


volumes:
  pg-data:
    driver: local

networks:
  ecommerce-networks:
    driver: bridge
