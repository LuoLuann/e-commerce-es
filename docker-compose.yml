

services:
  gateway:
    build: gateway
    mem_limit: 512m
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - ecommerce-networks

  postgres-db:
    image: postgres:16.0
    restart: always
    environment:
      POSTGRES_DB: eCommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "password"
      TZ: America/Sao_Paulo
    ports:
      - "5433:5432"
    networks:
      - ecommerce-networks
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./config/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 10

  catalog:
    build: ./catalog
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/eCommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
    - "8080:8080"
    networks:
      - ecommerce-networks
    depends_on:
      - postgres-db

  price:
    build: price
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/eCommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA=price_schema
    ports:
      - "8081:8081"
    depends_on:
      - postgres-db
    networks:
      - ecommerce-networks

  inventory:
    build: inventory
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/eCommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA=inventory_schema
    ports:
    - "8082:8082"
    depends_on:
      - postgres-db
    networks:
      - ecommerce-networks

  keycloak-db:
    image: postgres:16.0
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      TZ: America/Sao_Paulo
    ports:
      - "5434:5432"
    expose:
      - "5432"
    networks:
      - ecommerce-networks
    volumes:
      - keycloak-pg-data:/var/lib/postgresql/data

  keycloak:
    build: ./config/keycloak-custom
    command: ["start-dev", "--import-realm"] # Define o comando para importar o realm na inicialização
    ports:
      - "8089:8080"
    networks:
      - ecommerce-networks
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      KC_DB_DATABASE: keycloak
      KC_IMPORT: /opt/keycloak/realm-export.json
      KC_HOSTNAME: localhost # Ajuste conforme necessário
    volumes:
      - ./auth/realm-export.json:/opt/keycloak/realm-export.json
    depends_on:
      - keycloak-db

  auth:
    build: auth
    mem_limit: 512m
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - keycloak
    networks:
      - ecommerce-networks

  message:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ecommerce-networks



volumes:
  pg-data:
    driver: local
  keycloak-pg-data:
    driver: local

networks:
  ecommerce-networks:
    driver: bridge
